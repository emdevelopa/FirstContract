{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundme",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x35bcdd0af1ee9b7573ef2c8dbae7e9d3ecb70fd9d9a785d77600321f778c89b0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "896418",
    "logsBloom": "0x
    "blockHash": "0x66bf17bdc460bd140193d08649c663e6a0d1f6fce9a119afb9c547695fc02aeb",
    "transactionHash": "0x35bcdd0af1ee9b7573ef2c8dbae7e9d3ecb70fd9d9a785d77600321f778c89b0",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "896418",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "df3e47c76e56b04dfd3a16ff1b0be45e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundme\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using priceConverter for uint256;\\n\\n    uint256 public minUSD = 50 * 1e18;\\n\\n    address[] public funders;\\n\\n    mapping(address => uint256) public addressToAmountFund;\\n\\n    address public owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n\\n        priceFeed = AggregatorV3Interface(\\n            priceFeedAddress \\n        );\\n    }\\n\\n    function fundme() public payable {\\n        require(\\n            msg.value.getConvertionRate(priceFeed) >= minUSD,\\n            \\\"Send more than 1 eth\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFund[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFund[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"The sender is not the owner\\\");\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fundme();\\n    }\\n\\n    fallback() external payable {\\n        fundme();\\n    }\\n}\\n\",\"keccak256\":\"0x161ebb7c8e2d64e8fec35307165eef6dbb0627217b8603dca0f43e8557411ade\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary priceConverter {\\n    // Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        \\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConvertionRate(\\n        uint256 ethAmmount, AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n\\n        uint256 ethAmountInUSD = (ethPrice * ethAmmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x7915178ac0d1cba6a4a2e9cccdb73d76b1e399b22ee7bb1d5c36f32c7792e6f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610f69380380610f69833981810160405281019061003f919061012a565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610e03806101666000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063d1d9165d14610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d578063741bef1a146100a45780638c04995f146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dd565b005b3480156100b057600080fd5b506100b9610529565b6040516100c691906107c5565b60405180910390f35b3480156100db57600080fd5b506100f660048036038101906100f19190610823565b61054f565b6040516101039190610869565b60405180910390f35b34801561011857600080fd5b50610121610567565b60405161012e9190610893565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108da565b61058d565b6040516101759190610893565b60405180910390f35b34801561018a57600080fd5b506101936105cc565b6040516101a09190610869565b60405180910390f35b6000546101e1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610964565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906109b3565b92505081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490610a33565b60405180910390fd5b60005b6001805490508110156104195760006001828154811061039357610392610a53565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041190610a82565b915050610370565b50600067ffffffffffffffff81111561043557610434610aca565b5b6040519080825280602002602001820160405280156104635781602001602082028036833780820191505090505b506001908051906020019061047992919061069f565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a090610b2a565b60006040518083038185875af1925050503d80600081146104dd576040519150601f19603f3d011682016040523d82523d6000602084013e6104e2565b606091505b5050905080610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d90610b8b565b60405180910390fd5b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061059d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610bab565b6106019190610c1c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190610cda565b5050509150506402540be400816106979190610d55565b915050919050565b828054828255906000526020600020908101928215610718579160200282015b828111156107175782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bf565b5b5090506107259190610729565b5090565b5b8082111561074257600081600090555060010161072a565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061078b61078661078184610746565b610766565b610746565b9050919050565b600061079d82610770565b9050919050565b60006107af82610792565b9050919050565b6107bf816107a4565b82525050565b60006020820190506107da60008301846107b6565b92915050565b600080fd5b60006107f082610746565b9050919050565b610800816107e5565b811461080b57600080fd5b50565b60008135905061081d816107f7565b92915050565b600060208284031215610839576108386107e0565b5b60006108478482850161080e565b91505092915050565b6000819050919050565b61086381610850565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d816107e5565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b781610850565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b6000602082840312156108f0576108ef6107e0565b5b60006108fe848285016108c5565b91505092915050565b600082825260208201905092915050565b7f53656e64206d6f7265207468616e203120657468000000000000000000000000600082015250565b600061094e601483610907565b915061095982610918565b602082019050919050565b6000602082019050818103600083015261097d81610941565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109be82610850565b91506109c983610850565b92508282019050808211156109e1576109e0610984565b5b92915050565b7f5468652073656e646572206973206e6f7420746865206f776e65720000000000600082015250565b6000610a1d601b83610907565b9150610a28826109e7565b602082019050919050565b60006020820190508181036000830152610a4c81610a10565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a8d82610850565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610abf57610abe610984565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b14600083610af9565b9150610b1f82610b04565b600082019050919050565b6000610b3582610b07565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b75600b83610907565b9150610b8082610b3f565b602082019050919050565b60006020820190508181036000830152610ba481610b68565b9050919050565b6000610bb682610850565b9150610bc183610850565b9250828202610bcf81610850565b91508282048414831517610be657610be5610984565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c2782610850565b9150610c3283610850565b925082610c4257610c41610bed565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6c81610c4d565b8114610c7757600080fd5b50565b600081519050610c8981610c63565b92915050565b6000819050919050565b610ca281610c8f565b8114610cad57600080fd5b50565b600081519050610cbf81610c99565b92915050565b600081519050610cd4816108ae565b92915050565b600080600080600060a08688031215610cf657610cf56107e0565b5b6000610d0488828901610c7a565b9550506020610d1588828901610cb0565b9450506040610d2688828901610cc5565b9350506060610d3788828901610cc5565b9250506080610d4888828901610c7a565b9150509295509295909350565b6000610d6082610c8f565b9150610d6b83610c8f565b9250828202610d7981610c8f565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610db157610db0610984565b5b8282058414831517610dc657610dc5610984565b5b509291505056fea2646970667358221220925fc52b4668147d2be695635c34fd0cb2909227bace8a4d059ae8e62ebd72e564736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063d1d9165d14610137578063dc0d3dff14610141578063dc992aa01461017e57610083565b80633ccfd60b1461008d578063741bef1a146100a45780638c04995f146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dd565b005b3480156100b057600080fd5b506100b9610529565b6040516100c691906107c5565b60405180910390f35b3480156100db57600080fd5b506100f660048036038101906100f19190610823565b61054f565b6040516101039190610869565b60405180910390f35b34801561011857600080fd5b50610121610567565b60405161012e9190610893565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108da565b61058d565b6040516101759190610893565b60405180910390f35b34801561018a57600080fd5b506101936105cc565b6040516101a09190610869565b60405180910390f35b6000546101e1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610964565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906109b3565b92505081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490610a33565b60405180910390fd5b60005b6001805490508110156104195760006001828154811061039357610392610a53565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041190610a82565b915050610370565b50600067ffffffffffffffff81111561043557610434610aca565b5b6040519080825280602002602001820160405280156104635781602001602082028036833780820191505090505b506001908051906020019061047992919061069f565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a090610b2a565b60006040518083038185875af1925050503d80600081146104dd576040519150601f19603f3d011682016040523d82523d6000602084013e6104e2565b606091505b5050905080610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d90610b8b565b60405180910390fd5b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061059d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610bab565b6106019190610c1c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190610cda565b5050509150506402540be400816106979190610d55565b915050919050565b828054828255906000526020600020908101928215610718579160200282015b828111156107175782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bf565b5b5090506107259190610729565b5090565b5b8082111561074257600081600090555060010161072a565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061078b61078661078184610746565b610766565b610746565b9050919050565b600061079d82610770565b9050919050565b60006107af82610792565b9050919050565b6107bf816107a4565b82525050565b60006020820190506107da60008301846107b6565b92915050565b600080fd5b60006107f082610746565b9050919050565b610800816107e5565b811461080b57600080fd5b50565b60008135905061081d816107f7565b92915050565b600060208284031215610839576108386107e0565b5b60006108478482850161080e565b91505092915050565b6000819050919050565b61086381610850565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d816107e5565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b781610850565b81146108c257600080fd5b50565b6000813590506108d4816108ae565b92915050565b6000602082840312156108f0576108ef6107e0565b5b60006108fe848285016108c5565b91505092915050565b600082825260208201905092915050565b7f53656e64206d6f7265207468616e203120657468000000000000000000000000600082015250565b600061094e601483610907565b915061095982610918565b602082019050919050565b6000602082019050818103600083015261097d81610941565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109be82610850565b91506109c983610850565b92508282019050808211156109e1576109e0610984565b5b92915050565b7f5468652073656e646572206973206e6f7420746865206f776e65720000000000600082015250565b6000610a1d601b83610907565b9150610a28826109e7565b602082019050919050565b60006020820190508181036000830152610a4c81610a10565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a8d82610850565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610abf57610abe610984565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b14600083610af9565b9150610b1f82610b04565b600082019050919050565b6000610b3582610b07565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b75600b83610907565b9150610b8082610b3f565b602082019050919050565b60006020820190508181036000830152610ba481610b68565b9050919050565b6000610bb682610850565b9150610bc183610850565b9250828202610bcf81610850565b91508282048414831517610be657610be5610984565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c2782610850565b9150610c3283610850565b925082610c4257610c41610bed565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6c81610c4d565b8114610c7757600080fd5b50565b600081519050610c8981610c63565b92915050565b6000819050919050565b610ca281610c8f565b8114610cad57600080fd5b50565b600081519050610cbf81610c99565b92915050565b600081519050610cd4816108ae565b92915050565b600080600080600060a08688031215610cf657610cf56107e0565b5b6000610d0488828901610c7a565b9550506020610d1588828901610cb0565b9450506040610d2688828901610cc5565b9350506060610d3788828901610cc5565b9250506080610d4888828901610c7a565b9150509295509295909350565b6000610d6082610c8f565b9150610d6b83610c8f565b9250828202610d7981610c8f565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610db157610db0610984565b5b8282058414831517610dc657610dc5610984565b5b509291505056fea2646970667358221220925fc52b4668147d2be695635c34fd0cb2909227bace8a4d059ae8e62ebd72e564736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minUSD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFund",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}